Stage 1 of assignment included making a scanner and parser of the given grammer.

Files used are:

1)scanner.h:
a)It has an enum for boolean, token type and state.It also has structure for token.
b)It has declarations for functions used in scanner.c

2)scanner.c:
It takes the code as input, generates tokens and prints them in 1.txt

3)parser.h:
a)It has a structure for tree.
b)It has declarations of functions used in parser.c.

4)parser.c:
It parses the grammer, generates the parse tree and prints the derivations top-down and left to right in 2.txt.It also populates the symbol table and prints it in 3.txt.

5)main.c:
It is the driver code which runs scanner and parser.

6)symtab.h
It has defination for the structures used in symbol table.

7)ast.h
It has defination for structure used in ast.

8)inputfile.txt:
It is input file given to the scanner.

9)1.txt:
It is the list of tokens generated by the scanner.

10)2.txt:
It prints the derivations used.

11)3.txt
It prints the symbol table.

12)4.txt
It prints the abstract syntax tree.


To run the in normal way:

1)compile scanner.c by using:   >gcc -c scanner.c

2)compile parser.c by using:   >gcc -c parser.c

3)compile parser.c by using:   >gcc -c ast.c

4)compile and link main.c by using:    >gcc main.c scanner.o parser.o ast.o

5)run a.out by using:    >./a.out



To run by using makefile: 

1) Compile the file by using:      >make

2) run a.out by using:             >./a.out		  

